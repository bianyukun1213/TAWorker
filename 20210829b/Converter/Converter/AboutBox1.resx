<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>